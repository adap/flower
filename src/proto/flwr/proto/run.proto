// Copyright 2024 Flower Labs GmbH. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

syntax = "proto3";

package flwr.proto;

import "flwr/proto/fab.proto";
import "flwr/proto/node.proto";
import "flwr/proto/recordset.proto";
import "flwr/proto/transport.proto";

message Run {
  uint64 run_id = 1;
  string fab_id = 2;
  string fab_version = 3;
  map<string, Scalar> override_config = 4;
  string fab_hash = 5;
  string pending_at = 6;
  string starting_at = 7;
  string running_at = 8;
  string finished_at = 9;
  RunStatus status = 10;
}

message RunStatus {
  // "starting", "running", "finished"
  string status = 1;
  // "completed", "failed", "stopped" or "" (non-finished)
  string sub_status = 2;
  // failure details
  string details = 3;
}

// CreateRun
message CreateRunRequest {
  string fab_id = 1;
  string fab_version = 2;
  map<string, Scalar> override_config = 3;
  Fab fab = 4;
}
message CreateRunResponse { uint64 run_id = 1; }

// GetRun
message GetRunRequest {
  Node node = 1;
  uint64 run_id = 2;
}
message GetRunResponse { Run run = 1; }

// UpdateRunStatus
message UpdateRunStatusRequest {
  uint64 run_id = 1;
  RunStatus run_status = 2;
}
message UpdateRunStatusResponse {}

// GetRunStatus
message GetRunStatusRequest {
  Node node = 1;
  repeated uint64 run_ids = 2;
}
message GetRunStatusResponse { map<uint64, RunStatus> run_status_dict = 1; }

// Get Federation Options associated with run
message GetFederationOptionsRequest { uint64 run_id = 1; }
message GetFederationOptionsResponse { ConfigsRecord federation_options = 1; }
