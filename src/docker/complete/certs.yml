services:
  gen-certs:
    build:
      context: .
      pull: true
      dockerfile_inline: |
        FROM ubuntu:latest

        RUN apt-get update \
            && apt-get -y --no-install-recommends install \
            openssl

        WORKDIR /app/script

        ARG SUPERLINK_IP=127.0.0.1

        COPY <<-EOF superlink-certificate.conf
        [req]
        default_bits = 4096
        prompt = no
        default_md = sha256
        req_extensions = req_ext
        distinguished_name = dn

        [dn]
        C = US
        O = Flower
        CN = localhost

        [req_ext]
        subjectAltName = @alt_names

        [alt_names]
        DNS.0 = superlink
        IP.1 = ::1
        IP.2 = $${SUPERLINK_IP}
        EOF

        COPY --chmod=744 <<-'EOF' generate.sh
        #!/bin/bash
        # This script will generate all certificates if ca.crt does not exist

        set -e
        cd "$$( cd "$$( dirname "$${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"/../

        CA_PASSWORD=notsafe

        # Generate directories if not exists

        generate () {
          mkdir -p "$$1"

          if [ -f ""$$1"/ca.crt" ]; then
              echo "Skipping certificate generation as they already exist."
              return 0
          fi

          # Generate the root certificate authority key and certificate based on key
          openssl genrsa -out "$$1"/ca.key 4096
          openssl req \
              -new \
              -x509 \
              -key "$$1"/ca.key \
              -sha256 \
              -subj "/C=DE/ST=HH/O=CA, Inc." \
              -days 365 -out "$$1"/ca.crt

          # Generate a new private key for the server
          openssl genrsa -out "$$1"/server.key 4096

          # Create a signing CSR
          openssl req \
              -new \
              -key "$$1"/server.key \
              -out "$$1"/server.csr \
              -config ./script/"$$2"

          # Generate a certificate for the server
          openssl x509 \
              -req \
              -in "$$1"/server.csr \
              -CA "$$1"/ca.crt \
              -CAkey "$$1"/ca.key \
              -CAcreateserial \
              -out "$$1"/server.pem \
              -days 365 \
              -sha256 \
              -extfile ./script/"$$2" \
              -extensions req_ext
        }
        generate superlink-certificates superlink-certificate.conf
        EOF

        WORKDIR /app

        ENTRYPOINT ["./script/generate.sh"]
    volumes:
      - ./superlink-certificates/:/app/superlink-certificates/:rw
