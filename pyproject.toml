[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "flwr"
version = "1.13.1"
description = "Flower: A Friendly Federated AI Framework"
license = "Apache-2.0"
authors = ["The Flower Authors <hello@flower.ai>"]
readme = "README.md"
homepage = "https://flower.ai"
repository = "https://github.com/adap/flower"
documentation = "https://flower.ai"
keywords = [
    "Artificial Intelligence",
    "Federated AI",
    "Federated Analytics",
    "Federated Evaluation",
    "Federated Learning",
    "Flower",
    "Machine Learning",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [{ include = "flwr", from = "src/py" }]
exclude = ["src/py/**/*_test.py"]

[tool.poetry.scripts]
# `flwr` CLI
flwr = "flwr.cli.app:app"
# SuperExec (can run with either Deployment Engine or Simulation Engine)
flower-superexec = "flwr.superexec.app:run_superexec" # Deprecated
# Simulation Engine
flwr-simulation = "flwr.simulation.app:flwr_simulation"
flower-simulation = "flwr.simulation.run_simulation:run_simulation_from_cli"
# Deployment Engine
flower-superlink = "flwr.server.app:run_superlink"
flower-supernode = "flwr.client.supernode.app:run_supernode"
flwr-serverapp = "flwr.server.serverapp:flwr_serverapp"
flower-server-app = "flwr.server.run_serverapp:run_server_app" # Deprecated
flwr-clientapp = "flwr.client.clientapp:flwr_clientapp"
flower-client-app = "flwr.client.supernode:run_client_app" # Deprecated

[tool.poetry.dependencies]
python = "^3.9"
# Mandatory dependencies
numpy = ">=1.26.0,<3.0.0"
grpcio = "^1.60.0,!=1.64.2,<=1.64.3"
protobuf = "^4.25.2"
cryptography = "^42.0.4"
pycryptodome = "^3.18.0"
iterators = "^0.0.2"
typer = "^0.12.5"
tomli = "^2.0.1"
tomli-w = "^1.0.0"
pathspec = "^0.12.1"
rich = "^13.5.0"
# Optional dependencies (Simulation Engine)
ray = { version = "==2.10.0", optional = true, python = ">=3.9,<3.12" }
# Optional dependencies (REST transport layer)
requests = { version = "^2.31.0", optional = true }
starlette = { version = "^0.31.0", optional = true }
uvicorn = { version = "^0.23.0", extras = ["standard"], optional = true }

[tool.poetry.extras]
simulation = ["ray"]
rest = ["requests", "starlette", "uvicorn"]

[tool.poetry.group.dev.dependencies]
types-dataclasses = "==0.6.6"
types-protobuf = "==3.19.18"
types-requests = "==2.31.0.20240125"
types-setuptools = "==69.0.0.20240125"
clang-format = "==17.0.6"
isort = "==5.13.2"
black = { version = "==24.2.0", extras = ["jupyter"] }
taplo = "==0.9.3"
docformatter = "==1.7.5"
mypy = "==1.8.0"
pylint = "==3.3.1"
flake8 = "==5.0.4"
parameterized = "==0.9.0"
pytest = "==7.4.4"
pytest-cov = "==4.1.0"
pytest-watcher = "==0.4.1"
grpcio-tools = "==1.60.0"
mypy-protobuf = "==3.2.0"
jupyterlab = "==4.0.12"
rope = "==1.11.0"
semver = "==3.0.2"
sphinx = "==7.4.7"
sphinx-intl = "==2.2.0"
sphinx-click = "==6.0.0"
myst-parser = "==3.0.1"
sphinx-design = "==0.6.1"
sphinx-copybutton = "==0.5.2"
sphinxcontrib-mermaid = "==0.9.2"
sphinxcontrib-youtube = "==1.4.1"
furo = "==2024.8.6"
sphinx-reredirects = "==0.1.5"
nbsphinx = "==0.9.5"
nbstripout = "==0.6.1"
ruff = "==0.1.9"
sphinx-argparse = "==0.4.0"
pipreqs = "==0.4.13"
mdformat = "==0.7.18"
mdformat-gfm = "==0.3.6"
mdformat-frontmatter = "==2.0.1"
mdformat-beautysh = "==0.1.1"
twine = "==5.1.1"
pyroma = "==4.2"
check-wheel-contents = "==0.4.0"
GitPython = "==3.1.32"
PyGithub = "==2.1.1"
licensecheck = "==2024"
pre-commit = "==3.5.0"
sphinx-substitution-extensions = "2022.02.16"
sphinxext-opengraph = "==0.9.1"
docstrfmt = { git = "https://github.com/charlesbvll/docstrfmt.git", branch = "patch-2" }
docsig = "==0.64.0"

[tool.docstrfmt]
extend_exclude = [
    "doc/source/conf.py",
    "doc/source/tutorial-quickstart-huggingface.rst",
    "doc/source/_templates/autosummary/*",
    "doc/source/ref-api/*",
]

[tool.isort]
profile = "black"
known_first_party = ["flwr", "flwr_tool"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.pylint."MESSAGES CONTROL"]
disable = "duplicate-code,too-few-public-methods,useless-import-alias"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = ["src/py/flwr", "src/py/flwr_tool"]
filterwarnings = "ignore::DeprecationWarning"

[tool.pytest-watcher]
now = false
clear = true
delay = 0.2
runner = "pytest"
runner_args = ["-s", "-vvvvv"]
patterns = ["*.py"]
ignore_patterns = []

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
ignore_missing_imports = true
strict = true

[[tool.mypy.overrides]]
module = ["importlib.metadata.*", "importlib_metadata.*"]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["D", "E", "F", "W", "B", "ISC", "C4", "UP"]
fixable = ["D", "E", "F", "W", "B", "ISC", "C4", "UP"]
ignore = ["B024", "B027", "D205", "D209"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"src/py/flwr/server/strategy/*.py" = ["E501"]

[tool.docsig]
ignore-no-params = true
exclude = 'src/py/flwr/proto/.*|src/py/flwr/.*_test\.py|src/py/flwr/cli/new/templates/.*\.tpl'
