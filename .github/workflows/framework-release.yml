name: Publish `flwr` release on PyPI

on:
  release:
    types: [released]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ARTIFACT_BUCKET: artifact.flower.ai

jobs:
  publish:
    if: ${{ github.repository == 'adap/flower' }}
    name: Publish release
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Bootstrap
      uses: ./.github/actions/bootstrap

    - name: Get artifacts and publish
      env:
        GITHUB_REF: ${{ github.ref }}
      run: |
        TAG_NAME=$(echo "${GITHUB_REF_NAME}" | cut -c2-)

        wheel_name="flwr-${TAG_NAME}-py3-none-any.whl"
        tar_name="flwr-${TAG_NAME}.tar.gz"

        wheel_url="https://${{ env.ARTIFACT_BUCKET }}/py/release/v${TAG_NAME}/${wheel_name}"
        tar_url="https://${{ env.ARTIFACT_BUCKET }}/py/release/v${TAG_NAME}/${tar_name}"

        mkdir -p dist

        curl $wheel_url --output dist/$wheel_name
        curl $tar_url --output dist/$tar_name

        python -m poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN_RELEASE_FLWR }}

  parameters:
    if: ${{ github.repository == 'adap/flower' }}
    name: Collect docker build parameters
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: publish
    outputs:
      pip-version: ${{ steps.versions.outputs.pip-version }}
      setuptools-version: ${{ steps.versions.outputs.setuptools-version }}
      matrix: ${{ steps.matrix.outputs.matrix }}
      flwr-version: ${{ steps.versions.outputs.flwr-version }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: ./.github/actions/bootstrap
        id: bootstrap

      - id: versions
        run: |
          echo "pip-version=${{ steps.bootstrap.outputs.pip-version }}" >> "$GITHUB_OUTPUT"
          echo "setuptools-version=${{ steps.bootstrap.outputs.setuptools-version }}" >> "$GITHUB_OUTPUT"
          echo "flwr-version=$(poetry version -s)" >> "$GITHUB_OUTPUT"

      - id: matrix
        run: |
           python dev/build-docker-image-matrix.py --flwr-version "${{ steps.versions.outputs.flwr-version }}" > matrix.json
           echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

  build-base-images:
    if: ${{ github.repository == 'adap/flower' }}
    name: Build base images
    uses: ./.github/workflows/_docker-build.yml
    needs: parameters
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.parameters.outputs.matrix).base }}
    with:
      namespace-repository: ${{ matrix.images.namespace_repository }}
      file-dir: ${{ matrix.images.file_dir }}
      build-args: |
        PYTHON_VERSION=${{ matrix.images.python_version }}
        PIP_VERSION=${{ needs.parameters.outputs.pip-version }}
        SETUPTOOLS_VERSION=${{ needs.parameters.outputs.setuptools-version }}
        DISTRO=${{ matrix.images.distro.name }}
        DISTRO_VERSION=${{ matrix.images.distro.version }}
        FLWR_VERSION=${{ matrix.images.flwr_version }}
      tags: ${{ matrix.images.tag }}
    secrets:
      dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

  build-binary-images:
    if: ${{ github.repository == 'adap/flower' }}
    name: Build binary images
    uses: ./.github/workflows/_docker-build.yml
    needs: [parameters, build-base-images]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.parameters.outputs.matrix).binary }}
    with:
      namespace-repository: ${{ matrix.images.namespace_repository }}
      file-dir: ${{ matrix.images.file_dir }}
      build-args: BASE_IMAGE=${{ matrix.images.base_image }}
      tags: ${{ matrix.images.tags }}
    secrets:
      dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

  create-update-pr:
    if: ${{ github.repository == 'adap/flower' }}
    name: Create a PR with the updated Docker READMEs
    runs-on: ubuntu-22.04
    needs: [parameters, build-binary-images]
    steps:
      - run: ./dev/update-docker-readmes.sh ${{ needs.parameters.outputs.flwr-version }} "${{ needs.parameters.outputs.matrix }}"

      - uses: peter-evans/create-pull-request@c5a7806660adbe173f04e3e038b0ccdcd758773c # v6.1.0
        with:
          branch: doc/update-docker-readmes-${{ needs.parameters.outputs.flwr-version }}
          delete-branch: true
          commit-message: Add flwr version ${{ needs.parameters.outputs.flwr-version }} to Docker READMEs
          title: docs(framework:skip) Add flwr version ${{ needs.parameters.outputs.flwr-version }} to Docker READMEs
          body: Chnages autogenereated by [${{ github.run_id }}](${{ github.server_url }}/${{ github.repositoryUrl }}/actions/runs/${{ github.run_id }})
