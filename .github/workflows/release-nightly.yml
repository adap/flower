name: Release nightly

on:
  schedule:
    - cron: "0 23 * * *"

env:
  FLWR_TELEMETRY_ENABLED: 0

jobs:
  release-nightly:
    runs-on: ubuntu-22.04
    name: Relase nightly on PyPI
    if: github.repository == 'adap/flower'
    outputs:
      name: ${{ steps.release.outputs.name }}
      version: ${{ steps.release.outputs.version }}
      skip: ${{ steps.release.outputs.skip }}
      pip-version: ${{ steps.release.outputs.pip-version }}
      setuptools-version: ${{ steps.release.outputs.setuptools-version }}
      matrix: ${{ steps.release.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Bootstrap
        id: bootstrap
        uses: ./.github/actions/bootstrap
      - name: Release nightly
        id: release
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          RESULT=$(./dev/publish-nightly.sh)
          if [ "$RESULT" == "There were no commits in the last 24 hours." ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          fi

          echo "name=$(poetry version | awk {'print $1'})" >> $GITHUB_OUTPUT
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT
          echo "pip-version=${{ steps.bootstrap.outputs.pip-version }}" >> "$GITHUB_OUTPUT"
          echo "setuptools-version=${{ steps.bootstrap.outputs.setuptools-version }}" >> "$GITHUB_OUTPUT"
          python dev/build-docker-image-matrix.py --flwr-version nightly --simple > matrix.json
          echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

  build-docker-base-images:
    name: Build nightly base images
    if: github.repository == 'adap/flower' && needs.release-nightly.outputs.skip != 'true'
    uses: ./.github/workflows/_docker-build.yml
    needs: release-nightly
    with:
      namespace-repository: ${{ fromJson(needs.release-nightly.outputs.matrix).base[0].namespace_repository }}
      file-dir: ${{ fromJson(needs.release-nightly.outputs.matrix).base[0].file_dir }}
      build-args: |
        PIP_VERSION=${{ needs.release-nightly.outputs.pip-version }}
        SETUPTOOLS_VERSION=${{ needs.release-nightly.outputs.setuptools-version }}
        FLWR_VERSION=${{ needs.release-nightly.outputs.version }}
        FLWR_PACKAGE=${{ needs.release-nightly.outputs.name }}
      tags: |
        ${{ needs.release-nightly.outputs.version }}
        nightly
    secrets:
      dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

  build-docker-binary-images:
    name: Build nightly binary images
    if: github.repository == 'adap/flower' && needs.release-nightly.outputs.skip != 'true'
    uses: ./.github/workflows/_docker-build.yml
    needs: [release-nightly, build-docker-base-images]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.release-nightly.outputs.matrix).binary }}
    with:
      namespace-repository: ${{ matrix.images.namespace_repository }}
      file-dir: ${{ matrix.images.file_dir }}
      build-args: BASE_IMAGE=${{ needs.release-nightly.outputs.version }}
      tags: |
        ${{ needs.release-nightly.outputs.version }}
        nightly
    secrets:
      dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
