name: Intelligence TS

on:
  push:
    branches:
      - main
    paths:
      - 'intelligence/**/*'
      - '.github/workflows/intelligence-ts.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'intelligence/**/*'
      - '.github/workflows/intelligence-ts.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FLWR_TELEMETRY_ENABLED: 0

jobs:
  fi_ts_build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: intelligence/ts
        run: pnpm install

      - name: Run build
        working-directory: intelligence/ts
        run: pnpm build

  fi_ts_format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: intelligence/ts
        run: pnpm install

      - name: Run format check
        working-directory: intelligence/ts
        run: pnpm format:check

  fi_ts_lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: intelligence/ts
        run: pnpm install

      - name: Run lint check
        working-directory: intelligence/ts
        run: pnpm lint:check

  fi_ts_demos:
    name: Demos
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: intelligence/ts
        run: pnpm install

      - name: Get API Key
        id: get_api_key
        env:
          FI_DEV_REMOTE_URL: ${{ secrets.FI_DEV_REMOTE_URL }}
          FI_MGMT_API_KEY: ${{ secrets.FI_MGMT_API_KEY }}
        run: |
          api_key=$(./intelligence/dev/get_api_key.sh)
          echo "::add-mask::$api_key"
          echo "api_key=$api_key" >> $GITHUB_OUTPUT

      - name: Override hosts file
        env:
          FI_DEV_REMOTE_URL: ${{ secrets.FI_DEV_REMOTE_URL }}
        run: |
          # Extract the hostname from FI_DEV_REMOTE_URL (removes protocol and any trailing path)
          HOST=$(echo $FI_DEV_REMOTE_URL | sed -E 's|https?://([^/:]+).*|\1|')

          # Resolve the IP address of the extracted hostname.
          # 'getent hosts' is available on Ubuntu and returns the IP in the first column.
          IP=$(getent hosts $HOST | awk '{ print $1 }')

          # Append a new hosts entry mapping api.flower.ai to the resolved IP.
          echo "$IP api.flower.ai" | sudo tee -a /etc/hosts

      - name: Run demos
        working-directory: intelligence/ts
        env:
          FI_API_KEY: ${{ steps.get_api_key.outputs.api_key }}
        run: |
          pnpm demo
          pnpm demo:js-proj
          pnpm demo:ts-proj

  fi_ts_tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: intelligence/ts
        run: pnpm install

      - name: Get API Key
        id: get_api_key
        env:
          FI_DEV_REMOTE_URL: ${{ secrets.FI_DEV_REMOTE_URL }}
          FI_MGMT_API_KEY: ${{ secrets.FI_MGMT_API_KEY }}
        run: |
          api_key=$(./intelligence/dev/get_api_key.sh)
          echo "::add-mask::$api_key"
          echo "api_key=$api_key" >> $GITHUB_OUTPUT

      - name: Run tests
        working-directory: intelligence/ts
        env:
          FI_API_KEY: ${{ steps.get_api_key.outputs.api_key }}
        run: pnpm test

  fi_ts_docs:
    name: Docs build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.0'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: intelligence/ts
        run: pnpm install

      - name: Build docs
        working-directory: intelligence/ts
        run: pnpm build:docs
