name: Ping Stale Under Discussion Issues

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  ping-stale-issues:
    runs-on: ubuntu-22.04
    permissions:
      issues: read
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
    steps:
      - name: Ping stale Under Discussion issues via Slack
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const org = owner;
            const now = new Date();
            const todayStr = now.toISOString().slice(0, 10);
            const sevenDaysAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);

            const query = `repo:${owner}/${repo} is:issue is:open comments:>=1 no:milestone`;
            const { data } = await github.rest.search.issuesAndPullRequests({
              q: query,
              per_page: 100,
            });

            for (const issue of data.items) {
              const updatedAt = new Date(issue.updated_at);
              if (updatedAt >= sevenDaysAgo) {
                console.log(`Skipping #${issue.number}: updated recently`);
                continue;
              }

              // Fetch last comment
              const comments = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number: issue.number,
                per_page: 1,
                sort: "updated",
                direction: "desc",
              });

              const lastComment = comments.data[0];
              if (lastComment) {
                const body = lastComment.body || "";
                const isFromBot = lastComment.user?.login === "github-actions[bot]";
                const markerMatch = body.match(/<!-- bot:stale-ping:(\d{4}-\d{2}-\d{2}) -->/);

                if (isFromBot && markerMatch) {
                  const lastPingDate = new Date(markerMatch[1]);
                  if (lastPingDate >= sevenDaysAgo) {
                    console.log(`Skipping #${issue.number}: already pinged on ${markerMatch[1]}`);
                    continue;
                  }
                }
              }

              // Resolve assignees
              let orgAssignees = [];
              for (const assignee of issue.assignees) {
                const login = assignee.login;
                const { status } = await github.rest.orgs.checkMembershipForUser({
                  org,
                  username: login,
                }).catch(() => ({ status: 404 }));

                if (status === 204) {
                  orgAssignees.push(`@${login}`);
                }
              }

              const pingTarget =
                orgAssignees.length > 0 ? orgAssignees.join(", ") : "@WilliamLindskog";

              const slackText = `*Stale Under Discussion Issue*\n${pingTarget} â€” <${issue.html_url}|#${issue.number} - ${issue.title}> has had no activity for 7+ days.\nPlease review or update its status.\n\n<!-- bot:stale-ping:${todayStr} -->`;

              console.log(`Pinging #${issue.number} to Slack...`);

              await fetch("https://slack.com/api/chat.postMessage", {
                method: "POST",
                headers: {
                  Authorization: `Bearer ${process.env.SLACK_BOT_TOKEN}`,
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  channel: process.env.SLACK_CHANNEL_ID,
                  text: slackText,
                }),
              });
            }
