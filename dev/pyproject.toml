[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "devtool"
version = "0.0.0"
description = "Tools for developers."
license = "Apache-2.0"
authors = ["The Flower Authors <hello@flower.ai>"]
packages = [{include = "devtool", from = "./"}]

[tool.poetry.dependencies]
python = "^3.9"
types-dataclasses = "==0.6.6"
types-protobuf = "==4.21.0.7"
types-requests = "==2.31.0.20240125"
types-setuptools = "==69.0.0.20240125"
clang-format = "==17.0.6"
isort = "==5.13.2"
black = { version = "==24.2.0", extras = ["jupyter"] }
taplo = "==0.9.3"
docformatter = "==1.7.5"
mypy = "==1.8.0"
pylint = "==3.3.1"
flake8 = "==5.0.4"
parameterized = "==0.9.0"
pytest = "==7.4.4"
pytest-cov = "==4.1.0"
pytest-watcher = "==0.4.3"
grpcio-tools = "==1.62.3"
mypy-protobuf = "==3.2.0"
jupyterlab = "==4.0.12"
rope = "==1.13.0"
semver = "==3.0.2"
sphinx = "==7.4.7"
sphinx-intl = "==2.2.0"
sphinx-click = "==6.0.0"
myst-parser = "==3.0.1"
sphinx-design = "==0.6.1"
sphinx-copybutton = "==0.5.2"
sphinxcontrib-mermaid = "==0.9.2"
sphinxcontrib-youtube = "==1.4.1"
furo = "==2024.8.6"
sphinx-reredirects = "==0.1.5"
nbsphinx = "==0.9.5"
nbstripout = "==0.6.1"
ruff = "==0.4.5"
sphinx-argparse = "==0.4.0"
pipreqs = "==0.4.13"
mdformat = "==0.7.18"
mdformat-gfm = "==0.3.6"
mdformat-frontmatter = "==2.0.1"
mdformat-beautysh = "==0.1.1"
twine = "==5.1.1"
types-PyYAML = "^6.0.2"
pyroma = "==4.2"
check-wheel-contents = "==0.4.0"
GitPython = "==3.1.32"
PyGithub = "==2.1.1"
licensecheck = "==2024"
pre-commit = "==3.5.0"
sphinx-substitution-extensions = "2022.02.16"
sphinxext-opengraph = "==0.9.1"
docstrfmt = { git = "https://github.com/panh99/docstrfmt.git", branch = "patch-2" }

[tool.docstrfmt]
extend_exclude = [
    "../intelligence/docs/source/ts-ref-api/*",
    "../intelligence/docs/source/swift-ref-api/*",
    "../intelligence/docs/source/_templates/autosummary/*",
    "../intelligence/docs/source/conf.py",
]

[tool.isort]
profile = "black"
known_first_party = ["flwr", "flwr_tool"]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.pylint."MESSAGES CONTROL"]
disable = "duplicate-code,too-few-public-methods,useless-import-alias"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = ["./"]

[tool.pytest-watcher]
now = false
clear = true
delay = 0.2
runner = "pytest"
runner_args = ["-s", "-vvvvv"]
patterns = ["*.py"]
ignore_patterns = []

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
ignore_missing_imports = true
strict = true

[[tool.mypy.overrides]]
module = ["importlib.metadata.*", "importlib_metadata.*"]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.ruff]
target-version = "py39"
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff.lint]
select = ["D", "E", "F", "W", "B", "ISC", "C4", "UP"]
fixable = ["D", "E", "F", "W", "B", "ISC", "C4", "UP"]
ignore = ["B024", "B027", "D205", "D209"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
