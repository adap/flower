[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "fedvssl" # <----- Ensure it matches the name of your baseline directory containing all the source code
version = "1.0.0"
description = "Federated Self-supervised Learning for Video Understanding"
license = "Apache-2.0"
authors = ["The Flower Authors <hello@flower.ai>"]
readme = "README.md"
homepage = "https://flower.ai"
repository = "https://github.com/adap/flower"
documentation = "https://flower.ai"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.10, <3.12.0"  # don't change this
flwr = { extras = ["simulation"], version = "1.9.0" }
hydra-core = "1.3.2" # don't change this
torch = { url = "https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp310-cp310-linux_x86_64.whl" }
torchvision = { url = "https://download.pytorch.org/whl/cu117/torchvision-0.14.1%2Bcu117-cp310-cp310-linux_x86_64.whl" }
mmengine = "0.10.0"
yapf = "0.40.1"
tensorboard = "2.18.0"
numpy = "1.23.0"
mmcv-full = { url = "https://download.openmmlab.com/mmcv/dist/cu117/torch1.13.0/mmcv_full-1.7.1-cp310-cp310-manylinux1_x86_64.whl" }

[tool.poetry.dev-dependencies]
isort = "==5.13.2"
black = "==24.2.0"
docformatter = "==1.7.5"
mypy = "==1.4.1"
pylint = "==2.8.2"
flake8 = "==3.9.2"
pytest = "==6.2.4"
pytest-watch = "==4.2.0"
ruff = "==0.4.5"
types-requests = "==2.27.7"

[tool.isort]
line_length = 88
indent = "    "
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = [
    "flwr_baselines",
]

[tool.mypy]
ignore_missing_imports = true
strict = false
plugins = "numpy.typing.mypy_plugin"

[tool.pylint."MESSAGES CONTROL"]
disable = "bad-continuation,duplicate-code,too-few-public-methods,useless-import-alias"
good-names = "i,j,k,f,_,x,y,X,Y,mu,v"
signature-mutators = "hydra.main.main"

[[tool.mypy.overrides]]
module = [
    "importlib.metadata.*",
    "importlib_metadata.*",
]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[tool.pylint.typecheck]
generated-members = "numpy.*, torch.*, tensorflow.*"
# ignore-paths="fedvssl/CtP/"

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.ruff]
target-version = "py39"
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff.lint]
select = ["D", "E", "F", "W", "B", "ISC", "C4"]
fixable = ["D", "E", "F", "W", "B", "ISC", "C4"]
ignore = ["B024", "B027"]

[tool.ruff.pydocstyle]
convention = "numpy"
