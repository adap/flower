# ################################
# Model: seq2seq ASR on TIMIT with wav2vec2 + CTC/Attention
# Authors:
# * Titouan Parcollet 2021
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref docs/results/fl_wav2vec2/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
label_encode: docs/label_encoder.txt

wav2vec_output: docs/pretrained_wav2vec2

# URL for the biggest huggingface english wav2vec2 model.

wav2vec2_hub: "facebook/wav2vec2-large-lv60"
# Data files
data_folder:  data/audio/TEDLIUM_release-3/data

accented_letters: False
language: en # use 'it' for Italian, 'rw' for Kinyarwanda, 'en' for english
train_csv: data/ted_train.csv
valid_csv: data/ted_dev.csv
test_csv: data/ted_test.csv
skip_prep: False # Skip data preparation
device: cpu # will be overwritten by `server_device` in `conf/base.yaml`
# Training parameters

avoid_if_longer_than: 10.0
avoid_if_smaller_than: 0.1


# Decoding parameters
blank_index: 0
bos_index: 1
eos_index: 2

# Training parameters
number_of_epochs: 30
lr: 0.001
lr_wav2vec: 0.0001

ctc_weight: 0.2
sorting: descending

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 6 per GPU to fit 16GB of VRAM
batch_size: 4
test_batch_size: 1

dataloader_options:
    batch_size: !ref <batch_size>
    num_workers: 4 
test_dataloader_options:
    batch_size: !ref <test_batch_size>
    num_workers: 4 

# BPE parameters
token_type: unigram  # ["unigram", "bpe", "char"]
character_coverage: 1.0

# Feature parameters (FBANKS etc)
sample_rate: 16000


# Model parameters
activation: !name:torch.nn.LeakyReLU
dropout: 0.5
dnn_neurons: 500
dec_neurons: 500

#encoder with w2v
enc_dnn_layers: 1
enc_dnn_neurons: 1024

# Outputs
output_neurons: 52

# Decoding parameters
# Be sure that the bos and eos index match with the BPEs ones
# blank_index: 0
beam_size: 20
temperature: 1.50

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>



wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
    source: !ref <wav2vec2_hub>
    output_norm: True
    freeze: False

    save_path: !ref <wav2vec_output>/wav2vec2_checkpoint

  # A simple DNN that receive as inputs the output of the wav2vec2 model
  # Here the output dimensionality of the LARGE wav2vec2 is 1024.
enc: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
    input_shape: [null, null, 1024]
    activation: !ref <activation>
    dnn_blocks: !ref <enc_dnn_layers>
    dnn_neurons: !ref <enc_dnn_neurons>


ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <enc_dnn_neurons>
    n_neurons: !ref <output_neurons>
    bias: True

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True


modules:
    wav2vec2: !ref <wav2vec2>
    enc: !ref <enc>
    ctc_lin: !ref <ctc_lin>

model: !new:torch.nn.ModuleList
    - [!ref <enc>, !ref <ctc_lin>]

adam_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
 
wav2vec_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_wav2vec>

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

lr_annealing_adam: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0
 
lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_wav2vec>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        wav2vec2: !ref <wav2vec2>
        lr_annealing_adam: !ref <lr_annealing_adam>
        lr_annealing_wav2vec: !ref <lr_annealing_wav2vec>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>


ctc_computer: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.ctc_loss
        blank_index: !ref <blank_index>
        reduction: batch


error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    merge_tokens: True

coer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cver_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

