"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Node(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NODE_ID_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    def __init__(self,
        *,
        node_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_id",b"node_id"]) -> None: ...
global___Node = Node

class NodeInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NODE_ID_FIELD_NUMBER: builtins.int
    OWNER_AID_FIELD_NUMBER: builtins.int
    REGISTERED_AT_FIELD_NUMBER: builtins.int
    ACTIVATED_AT_FIELD_NUMBER: builtins.int
    DEACTIVATED_AT_FIELD_NUMBER: builtins.int
    DELETED_AT_FIELD_NUMBER: builtins.int
    node_id: builtins.int
    owner_aid: typing.Text
    registered_at: typing.Text
    activated_at: typing.Text
    deactivated_at: typing.Text
    deleted_at: typing.Text
    def __init__(self,
        *,
        node_id: builtins.int = ...,
        owner_aid: typing.Text = ...,
        registered_at: typing.Text = ...,
        activated_at: typing.Optional[typing.Text] = ...,
        deactivated_at: typing.Optional[typing.Text] = ...,
        deleted_at: typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_activated_at",b"_activated_at","_deactivated_at",b"_deactivated_at","_deleted_at",b"_deleted_at","activated_at",b"activated_at","deactivated_at",b"deactivated_at","deleted_at",b"deleted_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_activated_at",b"_activated_at","_deactivated_at",b"_deactivated_at","_deleted_at",b"_deleted_at","activated_at",b"activated_at","deactivated_at",b"deactivated_at","deleted_at",b"deleted_at","node_id",b"node_id","owner_aid",b"owner_aid","registered_at",b"registered_at"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_activated_at",b"_activated_at"]) -> typing.Optional[typing_extensions.Literal["activated_at"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deactivated_at",b"_deactivated_at"]) -> typing.Optional[typing_extensions.Literal["deactivated_at"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deleted_at",b"_deleted_at"]) -> typing.Optional[typing_extensions.Literal["deleted_at"]]: ...
global___NodeInfo = NodeInfo
