"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import flwr.proto.chunk_pb2
import flwr.proto.clientappio_pb2
import grpc

class ClientAppIoStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetToken: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.GetTokenRequest,
        flwr.proto.clientappio_pb2.GetTokenResponse]
    """Get token"""

    PullClientAppInputs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.PullClientAppInputsRequest,
        flwr.proto.clientappio_pb2.PullClientAppInputsResponse]
    """Get Message, Context, and Run"""

    PushClientAppOutputs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.PushClientAppOutputsRequest,
        flwr.proto.clientappio_pb2.PushClientAppOutputsResponse]
    """Send updated Message and Context"""

    PushChunk: grpc.UnaryUnaryMultiCallable[
        flwr.proto.chunk_pb2.PushChunkRequest,
        flwr.proto.chunk_pb2.PushChunkResponse]
    """Push chunks that are part of a message"""

    PullChunk: grpc.UnaryUnaryMultiCallable[
        flwr.proto.chunk_pb2.PullChunkRequest,
        flwr.proto.chunk_pb2.PullChunkResponse]
    """Get chunks belonging to a message"""

    QueryMessageId: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.QueryMessageIdRequest,
        flwr.proto.clientappio_pb2.QueryMessageIdResponse]
    """Get chunks belonging to a message"""


class ClientAppIoServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetToken(self,
        request: flwr.proto.clientappio_pb2.GetTokenRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.GetTokenResponse:
        """Get token"""
        pass

    @abc.abstractmethod
    def PullClientAppInputs(self,
        request: flwr.proto.clientappio_pb2.PullClientAppInputsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.PullClientAppInputsResponse:
        """Get Message, Context, and Run"""
        pass

    @abc.abstractmethod
    def PushClientAppOutputs(self,
        request: flwr.proto.clientappio_pb2.PushClientAppOutputsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.PushClientAppOutputsResponse:
        """Send updated Message and Context"""
        pass

    @abc.abstractmethod
    def PushChunk(self,
        request: flwr.proto.chunk_pb2.PushChunkRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.chunk_pb2.PushChunkResponse:
        """Push chunks that are part of a message"""
        pass

    @abc.abstractmethod
    def PullChunk(self,
        request: flwr.proto.chunk_pb2.PullChunkRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.chunk_pb2.PullChunkResponse:
        """Get chunks belonging to a message"""
        pass

    @abc.abstractmethod
    def QueryMessageId(self,
        request: flwr.proto.clientappio_pb2.QueryMessageIdRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.QueryMessageIdResponse:
        """Get chunks belonging to a message"""
        pass


def add_ClientAppIoServicer_to_server(servicer: ClientAppIoServicer, server: grpc.Server) -> None: ...
