"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import flwr.proto.clientappio_pb2
import flwr.proto.run_pb2
import grpc

class ClientAppIoStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetRunIdsWithPendingMessages: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.GetRunIdsWithPendingMessagesRequest,
        flwr.proto.clientappio_pb2.GetRunIdsWithPendingMessagesResponse]
    """Get run IDs with pending messages"""

    GetRun: grpc.UnaryUnaryMultiCallable[
        flwr.proto.run_pb2.GetRunRequest,
        flwr.proto.run_pb2.GetRunResponse]
    """Get run"""

    PullClientAppInputs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.PullClientAppInputsRequest,
        flwr.proto.clientappio_pb2.PullClientAppInputsResponse]
    """Pull client app inputs"""

    PushClientAppOutputs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.PushClientAppOutputsRequest,
        flwr.proto.clientappio_pb2.PushClientAppOutputsResponse]
    """Push client app outputs"""

    RequestToken: grpc.UnaryUnaryMultiCallable[
        flwr.proto.clientappio_pb2.RequestTokenRequest,
        flwr.proto.clientappio_pb2.RequestTokenResponse]
    """Request token"""


class ClientAppIoServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetRunIdsWithPendingMessages(self,
        request: flwr.proto.clientappio_pb2.GetRunIdsWithPendingMessagesRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.GetRunIdsWithPendingMessagesResponse:
        """Get run IDs with pending messages"""
        pass

    @abc.abstractmethod
    def GetRun(self,
        request: flwr.proto.run_pb2.GetRunRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.run_pb2.GetRunResponse:
        """Get run"""
        pass

    @abc.abstractmethod
    def PullClientAppInputs(self,
        request: flwr.proto.clientappio_pb2.PullClientAppInputsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.PullClientAppInputsResponse:
        """Pull client app inputs"""
        pass

    @abc.abstractmethod
    def PushClientAppOutputs(self,
        request: flwr.proto.clientappio_pb2.PushClientAppOutputsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.PushClientAppOutputsResponse:
        """Push client app outputs"""
        pass

    @abc.abstractmethod
    def RequestToken(self,
        request: flwr.proto.clientappio_pb2.RequestTokenRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.clientappio_pb2.RequestTokenResponse:
        """Request token"""
        pass


def add_ClientAppIoServicer_to_server(servicer: ClientAppIoServicer, server: grpc.Server) -> None: ...
