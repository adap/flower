"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import flwr.proto.node_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PushChunkRequest(google.protobuf.message.Message):
    """Pushing a Chunk"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CHUNKS_FIELD_NUMBER: builtins.int
    MESSAGE_ID_FIELD_NUMBER: builtins.int
    NODE_FIELD_NUMBER: builtins.int
    @property
    def chunks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Chunk]:
        """List of chunks carrying Array data of a Message"""
        pass
    message_id: builtins.int
    """Identifies the message these Chunks belong to"""

    @property
    def node(self) -> flwr.proto.node_pb2.Node:
        """Identifies the node making the request"""
        pass
    def __init__(self,
        *,
        chunks: typing.Optional[typing.Iterable[global___Chunk]] = ...,
        message_id: builtins.int = ...,
        node: typing.Optional[flwr.proto.node_pb2.Node] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node",b"node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunks",b"chunks","message_id",b"message_id","node",b"node"]) -> None: ...
global___PushChunkRequest = PushChunkRequest

class PushChunkResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___PushChunkResponse = PushChunkResponse

class PullChunkRequest(google.protobuf.message.Message):
    """Pulling a Chunk"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MESSAGE_ID_FIELD_NUMBER: builtins.int
    NODE_FIELD_NUMBER: builtins.int
    message_id: builtins.int
    """We are requesting a chunk from this Message"""

    @property
    def node(self) -> flwr.proto.node_pb2.Node:
        """Identifies the node making the request"""
        pass
    def __init__(self,
        *,
        message_id: builtins.int = ...,
        node: typing.Optional[flwr.proto.node_pb2.Node] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node",b"node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message_id",b"message_id","node",b"node"]) -> None: ...
global___PullChunkRequest = PullChunkRequest

class PullChunkResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CHUNK_FIELD_NUMBER: builtins.int
    @property
    def chunk(self) -> global___Chunk:
        """The chunk"""
        pass
    def __init__(self,
        *,
        chunk: typing.Optional[global___Chunk] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chunk",b"chunk"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chunk",b"chunk"]) -> None: ...
global___PullChunkResponse = PullChunkResponse

class Chunk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ARRAY_ID_FIELD_NUMBER: builtins.int
    RECORD_ID_FIELD_NUMBER: builtins.int
    CHUNK_INDEX_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    array_id: typing.Text
    """key that identifies the Array in the ArrayRecord"""

    record_id: typing.Text
    """key to identify to which ArrayRecord it belongs"""

    chunk_index: builtins.int
    """Array's data might be partition into more"""

    data: builtins.bytes
    """than one Chunk. Therefore we need to know"""

    def __init__(self,
        *,
        array_id: typing.Text = ...,
        record_id: typing.Text = ...,
        chunk_index: builtins.int = ...,
        data: builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["array_id",b"array_id","chunk_index",b"chunk_index","data",b"data","record_id",b"record_id"]) -> None: ...
global___Chunk = Chunk
