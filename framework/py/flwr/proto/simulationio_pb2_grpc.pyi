"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import flwr.proto.log_pb2
import flwr.proto.run_pb2
import flwr.proto.simulationio_pb2
import grpc

class SimulationIoStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    PullSimulationInputs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.simulationio_pb2.PullSimulationInputsRequest,
        flwr.proto.simulationio_pb2.PullSimulationInputsResponse]
    """Pull Simulation inputs"""

    PushSimulationOutputs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.simulationio_pb2.PushSimulationOutputsRequest,
        flwr.proto.simulationio_pb2.PushSimulationOutputsResponse]
    """Push Simulation outputs"""

    UpdateRunStatus: grpc.UnaryUnaryMultiCallable[
        flwr.proto.run_pb2.UpdateRunStatusRequest,
        flwr.proto.run_pb2.UpdateRunStatusResponse]
    """Update the status of a given run"""

    PushLogs: grpc.UnaryUnaryMultiCallable[
        flwr.proto.log_pb2.PushLogsRequest,
        flwr.proto.log_pb2.PushLogsResponse]
    """Push ServerApp logs"""

    GetFederationOptions: grpc.UnaryUnaryMultiCallable[
        flwr.proto.run_pb2.GetFederationOptionsRequest,
        flwr.proto.run_pb2.GetFederationOptionsResponse]
    """Get Federation Options"""

    GetRunStatus: grpc.UnaryUnaryMultiCallable[
        flwr.proto.run_pb2.GetRunStatusRequest,
        flwr.proto.run_pb2.GetRunStatusResponse]
    """Get Run Status"""


class SimulationIoServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def PullSimulationInputs(self,
        request: flwr.proto.simulationio_pb2.PullSimulationInputsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.simulationio_pb2.PullSimulationInputsResponse:
        """Pull Simulation inputs"""
        pass

    @abc.abstractmethod
    def PushSimulationOutputs(self,
        request: flwr.proto.simulationio_pb2.PushSimulationOutputsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.simulationio_pb2.PushSimulationOutputsResponse:
        """Push Simulation outputs"""
        pass

    @abc.abstractmethod
    def UpdateRunStatus(self,
        request: flwr.proto.run_pb2.UpdateRunStatusRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.run_pb2.UpdateRunStatusResponse:
        """Update the status of a given run"""
        pass

    @abc.abstractmethod
    def PushLogs(self,
        request: flwr.proto.log_pb2.PushLogsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.log_pb2.PushLogsResponse:
        """Push ServerApp logs"""
        pass

    @abc.abstractmethod
    def GetFederationOptions(self,
        request: flwr.proto.run_pb2.GetFederationOptionsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.run_pb2.GetFederationOptionsResponse:
        """Get Federation Options"""
        pass

    @abc.abstractmethod
    def GetRunStatus(self,
        request: flwr.proto.run_pb2.GetRunStatusRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.run_pb2.GetRunStatusResponse:
        """Get Run Status"""
        pass


def add_SimulationIoServicer_to_server(servicer: SimulationIoServicer, server: grpc.Server) -> None: ...
