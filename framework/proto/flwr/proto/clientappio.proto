// Copyright 2024 Flower Labs GmbH. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

syntax = "proto3";

package flwr.proto;

import "flwr/proto/fab.proto";
import "flwr/proto/run.proto";
import "flwr/proto/message.proto";

service ClientAppIo {

  // Get run IDs with pending messages
  rpc GetRunIdsWithPendingMessages(GetRunIdsWithPendingMessagesRequest)
      returns (GetRunIdsWithPendingMessagesResponse) {}

  // Request token
  rpc RequestToken(RequestTokenRequest) returns (RequestTokenResponse) {}

  // Pull client app inputs
  rpc PullClientAppInputs(PullClientAppInputsRequest)
      returns (PullClientAppInputsResponse) {}

  // Push client app outputs
  rpc PushClientAppOutputs(PushClientAppOutputsRequest)
      returns (PushClientAppOutputsResponse) {}
}

message GetRunIdsWithPendingMessagesRequest {}
message GetRunIdsWithPendingMessagesResponse {
  repeated uint64 run_ids = 1; // List of run IDs
}

message RequestTokenRequest { uint64 run_id = 1; }
message RequestTokenResponse { string token = 1; }

enum ClientAppOutputCode {
  SUCCESS = 0;
  DEADLINE_EXCEEDED = 1;
  UNKNOWN_ERROR = 2;
}
message ClientAppOutputStatus {
  ClientAppOutputCode code = 1;
  string message = 2;
}

message PullClientAppInputsRequest { string token = 1; }
message PullClientAppInputsResponse {
  Message message = 1;
  Context context = 2;
  Run run = 3;
  Fab fab = 4;
}

message PushClientAppOutputsRequest {
  string token = 1;
  Message message = 2;
  Context context = 3;
}
message PushClientAppOutputsResponse { ClientAppOutputStatus status = 1; }
