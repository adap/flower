// Copyright 2024 Flower Labs GmbH. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

syntax = "proto3";

package flwr.proto;

import "flwr/proto/fab.proto";
import "flwr/proto/run.proto";
import "flwr/proto/message.proto";
import "flwr/proto/appio.proto";

service ClientAppIo {

  // Get run IDs with pending messages
  rpc GetRunIdsWithPendingMessages(GetRunIdsWithPendingMessagesRequest)
      returns (GetRunIdsWithPendingMessagesResponse) {}

  // Request token
  rpc RequestToken(RequestTokenRequest) returns (RequestTokenResponse) {}

  // Get run details
  rpc GetRun(GetRunRequest) returns (GetRunResponse) {}

  // Pull client app inputs
  rpc PullClientAppInputs(PullAppInputsRequest)
      returns (PullAppInputsResponse) {}

  // Push client app outputs
  rpc PushClientAppOutputs(PushAppOutputsRequest)
      returns (PushAppOutputsResponse) {}

  // Push Message
  rpc PushMessage(PushAppMessagesRequest) returns (PushAppMessagesResponse) {}

  // Pull Message
  rpc PullMessage(PullAppMessagesRequest) returns (PullAppMessagesResponse) {}

  // Push Object
  rpc PushObject(PushObjectRequest) returns (PushObjectResponse) {}

  // Pull Object
  rpc PullObject(PullObjectRequest) returns (PullObjectResponse) {}

  // Confirm Message Received
  rpc ConfirmMessageReceived(ConfirmMessageReceivedRequest)
      returns (ConfirmMessageReceivedResponse) {}
}

message GetRunIdsWithPendingMessagesRequest {}
message GetRunIdsWithPendingMessagesResponse {
  repeated uint64 run_ids = 1; // List of run IDs
}

message RequestTokenRequest { uint64 run_id = 1; }
message RequestTokenResponse { string token = 1; }
